<ResourceDictionary
  x:Class="Client.MVVM.View.Themes.ResizableWindowDark"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:c="clr-namespace:Client.MVVM.View.Converters"
  xmlns:l="clr-namespace:Shared.MVVM.View.Localization">

    <!--  Background Colors  -->
    <SolidColorBrush x:Key="FirstBackgroundColor" Color="#22223B" />
    <SolidColorBrush x:Key="SecondBackgroundColor" Color="#3B3E54" />
    <SolidColorBrush x:Key="ThirdBackgroundColor" Color="#4A4E69" />

    <!--  Foreground Colors  -->
    <SolidColorBrush x:Key="FirstForegroundColor" Color="#9A8C98" />
    <SolidColorBrush x:Key="SecondForegroundColor" Color="#C9ADA7" />
    <SolidColorBrush x:Key="ThirdForegroundColor" Color="#F2E9E4" />

    <!--  Border Colors  -->
    <SolidColorBrush x:Key="FirstBorderColor" Color="#9A8C98" />
    <SolidColorBrush x:Key="SecondBorderColor" Color="#C9ADA7" />


    <Style x:Key="AccountCardStyle" TargetType="ListViewItem">

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource FirstBackgroundColor}" />
            </Trigger>
        </Style.Triggers>

        <Setter Property="Background" Value="#4f5370" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border
                      Height="60"
                      MaxWidth="180"
                      Margin="8,2,8,2"
                      Padding="5"
                      Background="{TemplateBinding Background}"
                      CornerRadius="5">
                        <Grid>
                            <!--  potrzebny do HoverPanelStyle  -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                              Grid.Column="0"
                              Margin="5,0,0,0"
                              VerticalAlignment="Center"
                              CanHorizontallyScroll="False"
                              Orientation="Vertical">
                                <TextBlock
                                  Margin="5,10,0,0"
                                  Padding="2"
                                  FontFamily="/MVVM/View/Fonts/RedHatDisplay"
                                  FontSize="15"
                                  FontWeight="SemiBold"
                                  Foreground="{DynamicResource SecondForegroundColor}"
                                  Text="{Binding Login}" />
                            </StackPanel>
                            <StackPanel
                              Grid.Column="0"
                              HorizontalAlignment="Right"
                              Orientation="Horizontal"
                              Style="{DynamicResource HoverPanelStyle}">
                                <Button
                                  Margin="7,7,20,7"
                                  HorizontalAlignment="Right"
                                  Command="{Binding Path=DataContext.DeleteAccount, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Window}}"
                                  CommandParameter="{Binding}"
                                  Content="{Binding Source={x:Static l:Translator.Instance}, Path=D.Delete}"
                                  Style="{DynamicResource CornerRadiusButtonStyle}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuButtonBorder" TargetType="Border">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThirdBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TransparentStyle" TargetType="Button">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="SemiBold" />

        <Setter Property="Background" Value="{DynamicResource FirstBackgroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CornerRadiusButtonStyle" TargetType="Button">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                      Background="{TemplateBinding Background}"
                      BorderBrush="{DynamicResource FirstBorderColor}"
                      BorderThickness="1,1,1,1"
                      CornerRadius="10">
                        <ContentPresenter
                          x:Name="contentPresenter"
                          Margin="{TemplateBinding Padding}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource FirstBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource FirstForegroundColor}" />
        <Setter Property="Background" Value="{DynamicResource FirstBackgroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThirdBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThirdBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ChatItemStyle" TargetType="ListViewItem">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">

                        <Ellipse
                          Width="30"
                          Height="30"
                          Margin="10,0,0,-5">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding Sender.Image}" RenderOptions.BitmapScalingMode="Fant" />
                            </Ellipse.Fill>

                        </Ellipse>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label
                                  Margin="0,0,-5,0"
                                  VerticalAlignment="Center"
                                  Content="{Binding Sender.Nickname}"
                                  FontWeight="SemiBold" />
                                <Label
                                  VerticalAlignment="Center"
                                  Content="{Binding SendTime}"
                                  FontSize="9"
                                  FontWeight="Normal"
                                  Foreground="Gray" />
                            </StackPanel>
                            <Label
                              VerticalAlignment="Center"
                              Content="{Binding PlainContent}"
                              FontSize="12"
                              FontWeight="Normal"
                              Foreground="{DynamicResource ThirdForegroundColor}" />
                        </StackPanel>

                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <ControlTemplate x:Key="CustomRow">
                <StackPanel Orientation="Horizontal">
                    <Label
                      Margin="40,-2,0,-2"
                      Content="{Binding PlainContent}"
                      Foreground="{DynamicResource ThirdForegroundColor}" />
                </StackPanel>
            </ControlTemplate>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDeleted}" Value="False">
                <Setter Property="Template" Value="{StaticResource CustomRow}" />
            </DataTrigger>
        </Style.Triggers>

    </Style>
    <Style x:Key="ConversationCardStyle" TargetType="ListViewItem">

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource FirstBackgroundColor}" />
            </Trigger>
        </Style.Triggers>

        <Setter Property="Background" Value="{DynamicResource ThirdBackgroundColor}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border
                      Height="60"
                      MaxWidth="180"
                      Margin="8,2,8,2"
                      Padding="5"
                      Background="{TemplateBinding Background}"
                      CornerRadius="5">

                        <StackPanel
                          Margin="5,0,0,0"
                          CanHorizontallyScroll="False"
                          Orientation="Horizontal">
                            <Ellipse Width="45" Height="45">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding Owner.Image}" />
                                </Ellipse.Fill>
                            </Ellipse>

                            <StackPanel
                              VerticalAlignment="Center"
                              CanHorizontallyScroll="False"
                              Orientation="Vertical">
                                <Label
                                  Margin="5,10,0,0"
                                  Padding="2"
                                  Content="{Binding Name}"
                                  FontFamily="/MVVM/View/Fonts/RedHatDisplay"
                                  FontSize="15"
                                  FontWeight="SemiBold"
                                  Foreground="{DynamicResource SecondForegroundColor}" />
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HoverPanelStyle" TargetType="StackPanel">
        <Setter Property="Visibility" Value="Hidden" />
        <Style.Triggers>
            <!--  wybieramy pierwszego węzła-przodka spośród wszystkich przodków typu Grid StackPanela  -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MessageBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource ThirdForegroundColor}" />

        <Setter Property="FontWeight" Value="Medium" />

        <Setter Property="Margin" Value="12,8,12,8" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{DynamicResource SecondBackgroundColor}" CornerRadius="8">

                        <Grid>
                            <TextBox
                              x:Name="MessageTextBox"
                              Margin="10,0,0,0"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              VerticalContentAlignment="Center"
                              Background="Transparent"
                              BorderThickness="0"
                              CaretBrush="{DynamicResource ThirdForegroundColor}"
                              FontFamily="/MVVM/View/Fonts/RedHatDisplay"
                              FontSize="15"
                              FontWeight="SemiBold"
                              Foreground="{DynamicResource ThirdForegroundColor}"
                              Text="{Binding WrittenMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              TextWrapping="NoWrap">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Return" Command="{Binding Send}" />
                                </TextBox.InputBindings>

                            </TextBox>
                            <TextBlock
                              Margin="10,0,0,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Foreground="{DynamicResource ThirdForegroundColor}"
                              IsHitTestVisible="False"
                              Text="{Binding Source={x:Static l:Translator.Instance}, Path=D.At_message}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=MessageTextBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible" />

                                            </DataTrigger>
                                        </Style.Triggers>

                                    </Style>
                                </TextBlock.Style>

                            </TextBlock>
                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="RectBorderStyle" TargetType="Rectangle">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Fill" Value="{DynamicResource FirstBorderColor}" />
        <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
        <EventSetter Event="MouseLeftButtonDown" Handler="Resize_Init" />
        <EventSetter Event="MouseLeftButtonUp" Handler="Resize_End" />
        <EventSetter Event="MouseMove" Handler="Resizing_Form" />
    </Style>
    <Style x:Key="{x:Type Thumb}" TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid x:Name="Grid">
                        <Rectangle
                          Width="Auto"
                          Height="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Fill="Transparent" />
                        <Border
                          x:Name="Rectangle1"
                          Width="Auto"
                          Height="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="{TemplateBinding Background}"
                          CornerRadius="5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollBar  -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="ScrollBar">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid
                      x:Name="GridRoot"
                      Width="8"
                      Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track
                          x:Name="PART_Track"
                          Grid.Row="0"
                          Focusable="false"
                          IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb
                                  x:Name="Thumb"
                                  Background="{TemplateBinding Foreground}"
                                  Style="{DynamicResource ScrollThumbStyle}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                  x:Name="PageUp"
                                  Command="ScrollBar.PageDownCommand"
                                  Focusable="false"
                                  Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                  x:Name="PageDown"
                                  Command="ScrollBar.PageUpCommand"
                                  Focusable="false"
                                  Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ButtonSelectBrush}" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ServerCardStyle" TargetType="ListViewItem">

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource FirstBackgroundColor}" />
            </Trigger>
        </Style.Triggers>

        <Setter Property="Background" Value="{DynamicResource SecondBackgroundColor}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border
                      Height="60"
                      MaxWidth="180"
                      Margin="8,2,8,2"
                      Padding="5"
                      Background="{TemplateBinding Background}"
                      CornerRadius="5">
                        <Grid>
                            <!--  potrzebny do HoverPanelStyle  -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel
                              Grid.Column="0"
                              Margin="5,0,0,0"
                              VerticalAlignment="Center"
                              CanHorizontallyScroll="False"
                              Orientation="Vertical">
                                <TextBlock
                                  Margin="5,10,0,0"
                                  Padding="2"
                                  FontFamily="/MVVM/View/Fonts/RedHatDisplay"
                                  FontSize="15"
                                  FontWeight="SemiBold"
                                  Foreground="{DynamicResource SecondForegroundColor}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="{Binding Name}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Name.Length, FallbackValue=-1, TargetNullValue=-1}" Value="-1">
                                                    <Setter Property="Text" Value="{Binding Source={x:Static l:Translator.Instance}, Path=D.Server_name}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock
                                  Margin="5,0,0,10"
                                  Padding="0"
                                  FontFamily="/MVVM/View/Fonts/RedHatDisplay"
                                  FontSize="12"
                                  FontWeight="Normal"
                                  Foreground="{DynamicResource ThirdForegroundColor}">
                                    <TextBlock.Resources>
                                        <c:IPv4AddressToStringConverter x:Key="IpAddressConv" />
                                        <c:PortToStringConverter x:Key="PortConv" />
                                    </TextBlock.Resources>
                                    <Run Text="{Binding IpAddress, Converter={StaticResource IpAddressConv}}" />
                                    <Run Text=":" />
                                    <Run Text="{Binding Port, Converter={StaticResource PortConv}}" />
                                </TextBlock>
                            </StackPanel>
                            <StackPanel
                              Grid.Column="0"
                              HorizontalAlignment="Right"
                              Orientation="Horizontal"
                              Style="{DynamicResource HoverPanelStyle}">
                                <!--
                                    RelativeSource odnosi się do MainWindow.xaml,
                                    w którym używamy stylu ServerCardStyle
                                -->
                                <Button
                                  Margin="7,7,20,7"
                                  HorizontalAlignment="Right"
                                  Command="{Binding Path=DataContext.DeleteServer, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Window}}"
                                  CommandParameter="{Binding}"
                                  Content="{Binding Source={x:Static l:Translator.Instance}, Path=D.Delete}"
                                  Style="{DynamicResource CornerRadiusButtonStyle}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StylishedTextBlock" TargetType="TextBlock">
        <Setter Property="Margin" Value="10" />
        <Setter Property="FontFamily" Value="/MVVM/View/Fonts/RedHatDisplay" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="StylishedLabel" TargetType="Label">
        <Setter Property="Margin" Value="15,5,15,5" />
        <Setter Property="FontFamily" Value="/MVVM/View/Fonts/RedHatDisplay" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="FormTextBox" TargetType="TextBox">
        <Setter Property="Margin" Value="10" />
        <Setter Property="FontFamily" Value="/MVVM/View/Fonts/RedHatDisplay" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="15,3,15,3" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CaretBrush" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                      x:Name="Bd"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="8"
                      SnapsToDevicePixels="true">
                        <ScrollViewer
                          x:Name="PART_ContentHost"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource FirstBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>
    <Style x:Key="FormPasswordBox" TargetType="PasswordBox">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="15,3,15,3" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="CaretBrush" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondForegroundColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                      x:Name="Bd"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      CornerRadius="8"
                      SnapsToDevicePixels="true">
                        <ScrollViewer
                          x:Name="PART_ContentHost"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource FirstBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StylishedToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="/MVVM/View/Fonts/RedHatDisplay" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondBackgroundColor}" />
            </Trigger>

        </Style.Triggers>
    </Style>
</ResourceDictionary>